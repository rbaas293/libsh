#!/bin/bash
RUN_LOC=local

oneTimeSetUp() {
    if expr "$OSTYPE" : 'darwin' > /dev/null; then
        realpath() {
            { case $1 in "/"*) true;; *) false;; esac; } && echo "$1" || echo "$PWD/${1#./}"
        }
    fi

    if [ "$RUN_LOC" = "local" ]; then
        SELF=$(realpath $0)
	    SELF_PARENT=$(realpath $(dirname $0))
	    REPO_ROOT=$(realpath $SELF_PARENT/../)
    else
        SELF=$(realpath $0)
	    SELF_PARENT=$(realpath $(dirname $0))
	    REPO_ROOT="/home/runner/work/libsh/libsh"
    fi

    #echo $SELF_PARENT
    #echo $REPO_ROOT
    
    args='--debug --verbose --foo bar -p 3333'
    echo "Params: $args"
    source ./dynamic_parsers.sh


}

setUp() {
    foo=''
    debug=''
    verbose=''
    p=''

}


testParse_all_params() {

    # Function under test
	parse_all_params $args

    # Tests
    assertEquals "bar" "$foo"
    assertEquals "yes" "$debug"
    assertEquals "yes" "$verbose"
    assertEquals "3333" "$p"
}


testParam() {
    args='--debug --verbose --foo bar -p 3333'

    # Function under Test
    param switch debug $args
    param switch verbose $args
    param long foo $args
    param short p $args

    # Tests
    assertEquals "bar" "$foo"
    assertEquals "yes" "$debug"
    assertEquals "yes" "$verbose"
    assertEquals "3333" "$p"
}

#if ! $(command -v "shunit2" >/dev/null 2>&1); then
#    echo "shunit2 must be installed."
#    exit 1
#fi

if [ "$RUN_LOC" = "local" ]; then
    . shunit2 
fi
